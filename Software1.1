
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.11.35219.272
MinimumVisualStudioVersion = 10.0.40219.1
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "SistemaGestionInventario", "SistemaGestionInventario\SistemaGestionInventario.csproj", "{8749E50A-4C5B-41DD-A0CC-955FCDEB0A77}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{8749E50A-4C5B-41DD-A0CC-955FCDEB0A77}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{8749E50A-4C5B-41DD-A0CC-955FCDEB0A77}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{8749E50A-4C5B-41DD-A0CC-955FCDEB0A77}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{8749E50A-4C5B-41DD-A0CC-955FCDEB0A77}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {E90C6980-60E7-45A6-9C87-BF1B8417D6E2}
	EndGlobalSection
EndGlobal


USE [master];
GO

-- Crear la base de datos InventarioDB
CREATE DATABASE [InventarioDB]
ON PRIMARY 
(
    NAME = N'InventarioDB', 
    FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\InventarioDB.mdf', 
    SIZE = 8192KB, 
    MAXSIZE = UNLIMITED, 
    FILEGROWTH = 65536KB
) 
LOG ON 
(
    NAME = N'InventarioDB_log', 
    FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\InventarioDB_log.ldf', 
    SIZE = 8192KB, 
    MAXSIZE = 2048GB, 
    FILEGROWTH = 65536KB
);
GO

-- Establecer nivel de compatibilidad de la base de datos
ALTER DATABASE [InventarioDB] SET COMPATIBILITY_LEVEL = 160;
GO

-- Habilitar búsqueda de texto completo si está disponible
IF (FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') = 1)
BEGIN
    EXEC [InventarioDB].dbo.sp_fulltext_database @action = 'enable';
END;
GO

-- Configuración de opciones de la base de datos
ALTER DATABASE [InventarioDB] SET ANSI_NULL_DEFAULT OFF;
ALTER DATABASE [InventarioDB] SET ANSI_NULLS OFF;
ALTER DATABASE [InventarioDB] SET ANSI_PADDING OFF;
ALTER DATABASE [InventarioDB] SET ANSI_WARNINGS OFF;
ALTER DATABASE [InventarioDB] SET ARITHABORT OFF;
ALTER DATABASE [InventarioDB] SET AUTO_CLOSE OFF;
ALTER DATABASE [InventarioDB] SET AUTO_SHRINK OFF;
ALTER DATABASE [InventarioDB] SET AUTO_UPDATE_STATISTICS ON;
ALTER DATABASE [InventarioDB] SET CURSOR_CLOSE_ON_COMMIT OFF;
ALTER DATABASE [InventarioDB] SET CONCAT_NULL_YIELDS_NULL OFF;
ALTER DATABASE [InventarioDB] SET QUOTED_IDENTIFIER OFF;
ALTER DATABASE [InventarioDB] SET NUMERIC_ROUNDABORT OFF;
ALTER DATABASE [InventarioDB] SET RECOVERY SIMPLE;
ALTER DATABASE [InventarioDB] SET MULTI_USER;
ALTER DATABASE [InventarioDB] SET PAGE_VERIFY CHECKSUM;
GO

-- Habilitar el Query Store y configurar parámetros
ALTER DATABASE [InventarioDB] SET QUERY_STORE = ON;
ALTER DATABASE [InventarioDB] SET QUERY_STORE 
(
    OPERATION_MODE = READ_WRITE, 
    CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30),
    DATA_FLUSH_INTERVAL_SECONDS = 900, 
    INTERVAL_LENGTH_MINUTES = 60, 
    MAX_STORAGE_SIZE_MB = 1000, 
    QUERY_CAPTURE_MODE = AUTO, 
    MAX_PLANS_PER_QUERY = 200, 
    WAIT_STATS_CAPTURE_MODE = ON
);
GO

USE [InventarioDB];
GO

-- Crear tabla Categorias
CREATE TABLE dbo.Categorias
(
    IdCategoria INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    Nombre NVARCHAR(100) NOT NULL,
    Descripcion NVARCHAR(255) NULL
);
GO

-- Crear tabla Proveedores
CREATE TABLE dbo.Proveedores
(
    IdProveedor INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    Nombre NVARCHAR(100) NOT NULL,
    Telefono NVARCHAR(20) NULL,
    Correo NVARCHAR(100) NULL,
    Direccion NVARCHAR(255) NULL
);
GO

-- Crear tabla Productos
CREATE TABLE dbo.Productos
(
    IdProducto INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    Nombre NVARCHAR(100) NOT NULL,
    Precio DECIMAL(10, 2) NOT NULL,
    Stock INT NOT NULL,
    IdCategoria INT NULL,
    IdProveedor INT NULL,
    CONSTRAINT FK_Productos_Categorias FOREIGN KEY (IdCategoria) REFERENCES dbo.Categorias(IdCategoria),
    CONSTRAINT FK_Productos_Proveedores FOREIGN KEY (IdProveedor) REFERENCES dbo.Proveedores(IdProveedor)
);
GO

-- Cambiar la base de datos a modo de lectura/escritura
USE [master];
GO
ALTER DATABASE [InventarioDB] SET READ_WRITE;
GO
